% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeNetCDF-methods.R
\name{writeNetCDF-methods}
\alias{writeNetCDF-methods}
\alias{writeNetCDF}
\alias{writeNetCDF,Field,character-method}
\alias{writeNetCDF,Raster,character-method}
\alias{writeNetCDF,list,character-method}
\title{writeNetCDF methods}
\usage{
\S4method{writeNetCDF}{Field,character}(
  x,
  filename,
  start.date = NULL,
  verbose = FALSE,
  quantity = NULL,
  source = NULL,
  layer.names = NULL,
  layer.dim.name = NULL,
  lat.dim.name = "Lat",
  lon.dim.name = "Lon",
  time.dim.name = "Time",
  precision = "float",
  time.values = NULL,
  ...
)

\S4method{writeNetCDF}{Raster,character}(
  x,
  filename,
  start.date = NULL,
  verbose = FALSE,
  quantity = NULL,
  source = NULL,
  layer.names = NULL,
  layer.dim.name = NULL,
  lat.dim.name = "Lat",
  lon.dim.name = "Lon",
  time.dim.name = "Time",
  precision = "float",
  time.values = NULL,
  ...
)

\S4method{writeNetCDF}{list,character}(
  x,
  filename,
  start.date = NULL,
  verbose = FALSE,
  quantity = NULL,
  source = NULL,
  layer.names = NULL,
  layer.dim.name = NULL,
  lat.dim.name = "Lat",
  lon.dim.name = "Lon",
  time.dim.name = "Time",
  precision = "float",
  time.values = NULL,
  ...
)
}
\arguments{
\item{x}{A Field or Raster* object to be written as a netCDF file.  The method can also handle a list of arrays (each array in the list represents one layer)
but this is more of a technical, internal use of this method.}

\item{filename}{A character specifying the name of the netCDF file to be written.}

\item{start.date}{A date (as a POSIX date) for the start of the time dimension.  Can be omitted for a Field (), \emph{must} be included if you want to write 
a RasterStack or RasterBrick with a time dimension.}

\item{verbose}{Logical, if TRUE print a bunch of progress and debug output}

\item{quantity}{A DGVMTools::Quantity object.  This is to provide meta-data (units, names) if saving a Raster* object, it is ignored in the case of a Field (but note that
if you want to use different meta-data for a Field just alter the Quantity object in the Field object before you call writeNetCDF)}

\item{source}{A DGVMTools::Source object.  This is to provide meta-data about the source of the data (model run/dataset, climate forcing, contact person etc)
if saving a Raster* object. It is ignored in the case of a Field (but note  that if you want to use different meta-data for a Field just alter the Source object in the Field object before you call writeNetCDF)}

\item{layer.names}{A vector of characters to specify the names of the variables in the netCDF file, ignored for a Field.
Should be length 1 or the number of layers in the input raster.}

\item{layer.dim.name}{A character string specifing the name of the fourth 'layers' dimension (ie not lon, lat or time).  If not specified (or NULL) then no fourth dimension
is created and each layer gets its own variable in the netCDF.  If it is specified, the layers are 'collapsed' on to elements on this fourth, layers, dimension.}

\item{lat.dim.name}{Character, the latitude dimension name. Defaults to "Lat".}

\item{lon.dim.name}{Character, the longitude dimension name. Defaults to "Lon".}

\item{time.dim.name}{Character, the time dimension name. Defaults to "Time".}

\item{precision}{Character, the output precision (although that is confusing terminology, 'type' would be more descriptive) to use in the netCDF file.  See the 'prec' argument of ncdf4::ncvar_def, can be  'short', 'integer', 'float', 'double', 'char', 'byte').  Default is 'float'.}

\item{time.values}{The values along the time dimension (in the case of Raster*, is ignored for a Field) defined as 'days since' the 'start.date' argument.
If not supplied, data is assumed not to have a time axis. In such case if the raster has multiple layers they will be interpreted}

\item{...}{Other arguments, not currently used



These methods offers two very convienent things.  Firsly, it allows the exporting of a DGVMTools::Field object as a standard netCDF file.  Secondly, it provides a more
convenient way to write Raster* objects as netCDF objects than writeRaster (at least in the eye's of the author).  This because is allows specifying of meta data and a time axis, 
allows some flexibility in the formatting, should write CF-standard compliant files and doesn't invert the latitudes. 

Note that to maintain some parsimony and flexibility, the methods can write *either* a netCDF file with a time dimension *or* one with multiple variables(layers).}
}
\value{
Nothing
}
\description{
Methods for writing DGVMTools::Field and raster::Raster* objects to disk as netCDF files.  Uses the ncdf4 R-package behind the scenes.  NOTE: when using the function on a raster::Raster object,
you cannot provide both multiple variables and multiple time period, you must do one or the other.
}
\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
